{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keyur\\\\Downloads\\\\react-kyk7cr\\\\src\\\\PlaceAutoComplete.js\";\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [cordinates, setCordinates] = useState({\n  lat: \"\",\n  lng: \"\"\n});\nconst [address, setAddress] = useState();\nconst handleChange = async value => {\n  const result = await geocodeByAddress(value);\n  const ll = await getLatLng(result[0]);\n  setAddress(value);\n  console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\n  setCordinates(ll);\n};\nconsole.log(cordinates.lat);\nconsole.log(cordinates.lng);\nconst placeAutocomplete = () => {\n  return /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n    value: address,\n    onChange: handleChange,\n    children: _ref => {\n      let {\n        getInputProps,\n        suggestions,\n        getSuggestionItemProps,\n        loading\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          ...getInputProps({\n            placeholder: \"Search Places ...\",\n            className: \"location-search-input\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this), suggestions.map(suggestion => {\n            const className = suggestion.active ? \"suggestion-item--active\" : \"suggestion-item\";\n            // inline style for demonstration purpose\n            const style = suggestion.active ? {\n              backgroundColor: \"#fafafa\",\n              cursor: \"pointer\"\n            } : {\n              backgroundColor: \"#ffffff\",\n              cursor: \"pointer\"\n            };\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              ...getSuggestionItemProps(suggestion, {\n                className,\n                style\n              }),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: suggestion.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\nexport default placeAutocomplete;","map":{"version":3,"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","useState","cordinates","setCordinates","lat","lng","address","setAddress","handleChange","value","result","ll","console","log","placeAutocomplete","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description"],"sources":["C:/Users/keyur/Downloads/react-kyk7cr/src/PlaceAutoComplete.js"],"sourcesContent":["import React from 'react'\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nimport \"./style.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst [cordinates, setCordinates] = useState({\r\n  lat: \"\",\r\n  lng: \"\",\r\n});\r\nconst [address, setAddress] = useState();\r\n\r\nconst handleChange = async (value) => {\r\n  const result = await geocodeByAddress(value);\r\n    const ll = await getLatLng(result[0]);\r\n    setAddress(value)\r\n  console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\r\n  setCordinates(ll);\r\n};\r\n\r\n  console.log(cordinates.lat);\r\n  console.log(cordinates.lng);\r\n\r\nconst placeAutocomplete = () => {\r\n  return (\r\n    <PlacesAutocomplete value={address} onChange={handleChange}>\r\n      {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n        <div>\r\n          <input\r\n            {...getInputProps({\r\n              placeholder: \"Search Places ...\",\r\n              className: \"location-search-input\",\r\n            })}\r\n          />\r\n          <div className=\"autocomplete-dropdown-container\">\r\n            {loading && <div>Loading...</div>}\r\n            {suggestions.map((suggestion) => {\r\n              const className = suggestion.active\r\n                ? \"suggestion-item--active\"\r\n                : \"suggestion-item\";\r\n              // inline style for demonstration purpose\r\n              const style = suggestion.active\r\n                ? { backgroundColor: \"#fafafa\", cursor: \"pointer\" }\r\n                : { backgroundColor: \"#ffffff\", cursor: \"pointer\" };\r\n              return (\r\n                <div\r\n                  {...getSuggestionItemProps(suggestion, {\r\n                    className,\r\n                    style,\r\n                  })}\r\n                >\r\n                  <span>{suggestion.description}</span>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </PlacesAutocomplete>\r\n  );\r\n}\r\n\r\nexport default placeAutocomplete"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,IACvBC,gBAAgB,EAChBC,SAAS,QACJ,2BAA2B;AAElC,OAAO,aAAa;AACpB,SAASC,QAAQ,QAAQ,OAAO;AAAC;AAEjC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGF,QAAQ,CAAC;EAC3CG,GAAG,EAAE,EAAE;EACPC,GAAG,EAAE;AACP,CAAC,CAAC;AACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,EAAE;AAExC,MAAMO,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpC,MAAMC,MAAM,GAAG,MAAMX,gBAAgB,CAACU,KAAK,CAAC;EAC1C,MAAME,EAAE,GAAG,MAAMX,SAAS,CAACU,MAAM,CAAC,CAAC,CAAC,CAAC;EACrCH,UAAU,CAACE,KAAK,CAAC;EACnBG,OAAO,CAACC,GAAG,CAAC,4CAA4C,EAAEF,EAAE,CAAC;EAC7DR,aAAa,CAACQ,EAAE,CAAC;AACnB,CAAC;AAECC,OAAO,CAACC,GAAG,CAACX,UAAU,CAACE,GAAG,CAAC;AAC3BQ,OAAO,CAACC,GAAG,CAACX,UAAU,CAACG,GAAG,CAAC;AAE7B,MAAMS,iBAAiB,GAAG,MAAM;EAC9B,oBACE,QAAC,kBAAkB;IAAC,KAAK,EAAER,OAAQ;IAAC,QAAQ,EAAEE,YAAa;IAAA,UACxD;MAAA,IAAC;QAAEO,aAAa;QAAEC,WAAW;QAAEC,sBAAsB;QAAEC;MAAQ,CAAC;MAAA,oBAC/D;QAAA,wBACE;UAAA,GACMH,aAAa,CAAC;YAChBI,WAAW,EAAE,mBAAmB;YAChCC,SAAS,EAAE;UACb,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACF,eACF;UAAK,SAAS,EAAC,iCAAiC;UAAA,WAC7CF,OAAO,iBAAI;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAAqB,EAChCF,WAAW,CAACK,GAAG,CAAEC,UAAU,IAAK;YAC/B,MAAMF,SAAS,GAAGE,UAAU,CAACC,MAAM,GAC/B,yBAAyB,GACzB,iBAAiB;YACrB;YACA,MAAMC,KAAK,GAAGF,UAAU,CAACC,MAAM,GAC3B;cAAEE,eAAe,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAU,CAAC,GACjD;cAAED,eAAe,EAAE,SAAS;cAAEC,MAAM,EAAE;YAAU,CAAC;YACrD,oBACE;cAAA,GACMT,sBAAsB,CAACK,UAAU,EAAE;gBACrCF,SAAS;gBACTI;cACF,CAAC,CAAC;cAAA,uBAEF;gBAAA,UAAOF,UAAU,CAACK;cAAW;gBAAA;gBAAA;gBAAA;cAAA;YAAQ;cAAA;cAAA;cAAA;YAAA,QACjC;UAEV,CAAC,CAAC;QAAA;UAAA;UAAA;UAAA;QAAA,QACE;MAAA;QAAA;QAAA;QAAA;MAAA,QACF;IAAA;EACP;IAAA;IAAA;IAAA;EAAA,QACkB;AAEzB,CAAC;AAED,eAAeb,iBAAiB"},"metadata":{},"sourceType":"module","externalDependencies":[]}