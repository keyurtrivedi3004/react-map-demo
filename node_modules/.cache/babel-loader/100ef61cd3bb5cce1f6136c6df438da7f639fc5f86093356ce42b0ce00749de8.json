{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keyur\\\\Downloads\\\\react-kyk7cr\\\\src\\\\PlaceAutoComplete.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport \"./style.css\";\nimport { useState } from \"react\";\nimport { createContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport let values;\nconst placeAutocomplete = () => {\n  _s();\n  const mapDetailContext = /*#__PURE__*/createContext();\n  const [cordinates, setCordinates] = useState({\n    lat: 23.0166287,\n    lng: 72.5199797\n  });\n  console.log(\"ðŸš€ ~ file: placeAutocomplete.js:18 ~ placeAutocomplete ~ cordinates\", cordinates);\n  const [address, setAddress] = useState(\"\");\n  const handleChange = async value => {\n    const result = await geocodeByAddress(value);\n    const ll = await getLatLng(result[0]);\n    setAddress(value);\n    // console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\n    setCordinates(ll);\n    console.log(\"c1\", cordinates);\n    console.log(\"l1\", ll);\n    console.log(\"c2\", cordinates.lat);\n    console.log(\"l2\", ll.lat);\n    {\n      cordinates ? values = cordinates : null;\n    }\n    console.log(\"ðŸš€ ~ file: placeAutocomplete.js:32 ~ handleChange ~ values\", values);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: cordinates,\n      children: /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n        value: address,\n        onChange: setAddress,\n        onSelect: handleChange,\n        children: _ref => {\n          let {\n            getInputProps,\n            suggestions,\n            getSuggestionItemProps,\n            loading\n          } = _ref;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              ...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\"\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"autocomplete-dropdown-container\",\n              children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: \"Loading...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 31\n              }, this), suggestions.map(suggestion => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                  borderStyle: \"hidden\",\n                  color: \"black\"\n                };\n                return /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"suggestionInput\",\n                    ...getSuggestionItemProps(suggestion, {\n                      style\n                    }),\n                    children: suggestion.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 70,\n                    columnNumber: 25\n                  }, this)\n                }, suggestion.index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 23\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(placeAutocomplete, \"8xwRd8Ycan7Zdp3eUKFBocM3SFY=\");\nexport default placeAutocomplete;","map":{"version":3,"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","useState","createContext","values","placeAutocomplete","mapDetailContext","cordinates","setCordinates","lat","lng","console","log","address","setAddress","handleChange","value","result","ll","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","style","backgroundColor","active","borderStyle","color","description","index"],"sources":["C:/Users/keyur/Downloads/react-kyk7cr/src/PlaceAutoComplete.js"],"sourcesContent":["import React from 'react'\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng,\r\n} from \"react-places-autocomplete\";\r\n\r\nimport \"./style.css\";\r\nimport { useState } from \"react\";\r\nimport { createContext } from 'react';\r\n\r\nexport let values;\r\nconst placeAutocomplete = () => {\r\n\r\n  const mapDetailContext = createContext()\r\n  \r\n  const [cordinates, setCordinates] = useState({\r\n    lat: 23.0166287,\r\n    lng: 72.5199797,\r\n  });\r\n  console.log(\"ðŸš€ ~ file: placeAutocomplete.js:18 ~ placeAutocomplete ~ cordinates\", cordinates)\r\n  const [address, setAddress] = useState(\"\");\r\n  const handleChange = async (value) => {\r\n      const result = await geocodeByAddress(value);\r\n     const ll = await getLatLng(result[0]);\r\n\r\n      setAddress(value);\r\n      // console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\r\n    setCordinates(ll);\r\n     console.log(\"c1\", cordinates);\r\n     console.log(\"l1\", ll);\r\n     console.log(\"c2\", cordinates.lat);\r\n     console.log(\"l2\", ll.lat);\r\n     \r\n     {cordinates ? values = cordinates : null}\r\n     console.log(\"ðŸš€ ~ file: placeAutocomplete.js:32 ~ handleChange ~ values\", values)\r\n     \r\n    };\r\n    \r\n    return (\r\n      <>\r\n        <Context.Provider value={cordinates}>\r\n          <PlacesAutocomplete\r\n            value={address}\r\n            onChange={setAddress}\r\n            onSelect={handleChange}\r\n          >\r\n            {({\r\n              getInputProps,\r\n              suggestions,\r\n              getSuggestionItemProps,\r\n              loading,\r\n            }) => (\r\n              <div>\r\n                <input\r\n                  {...getInputProps({\r\n                    placeholder: \"Search Places ...\",\r\n                    className: \"location-search-input\",\r\n                  })}\r\n                />\r\n                <div className=\"autocomplete-dropdown-container\">\r\n                  {loading && <div>Loading...</div>}\r\n                  {suggestions.map((suggestion) => {\r\n                    const style = {\r\n                      backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\r\n                      borderStyle: \"hidden\",\r\n                      color: \"black\",\r\n                    };\r\n                    return (\r\n                      <div key={suggestion.index}>\r\n                        <div\r\n                          className=\"suggestionInput\"\r\n                          {...getSuggestionItemProps(suggestion, {\r\n                            style,\r\n                          })}\r\n                        >\r\n                          {suggestion.description}\r\n                        </div>\r\n                      </div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )}\r\n          </PlacesAutocomplete>\r\n        </Context.Provider>\r\n      </>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default placeAutocomplete;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}