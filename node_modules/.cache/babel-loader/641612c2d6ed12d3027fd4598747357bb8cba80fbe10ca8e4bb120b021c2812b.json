{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\keyur\\\\Downloads\\\\react-kyk7cr\\\\src\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from 'react-google-maps';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from \"react-places-autocomplete\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Map() {\n  _s();\n  const [cordinates, setCordinates] = useState({\n    lat: 23.0166287,\n    lng: 72.5199797\n  });\n  console.log(\"ðŸš€ ~ file: Map.js:20 ~ Map ~ cordinates\", cordinates);\n  const [address, setAddress] = useState(\"\");\n  const handleSelect = async value => {\n    console.log(\"ðŸš€ ~ file: Map.js:24 ~ handleChange ~ value\", value);\n    const result = await geocodeByAddress(value);\n    const ll = await getLatLng(result[0]);\n    setAddress(value);\n\n    // console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\n    console.log(\"c1\", cordinates);\n    console.log(\"l1\", ll);\n    console.log(\"c2\", cordinates.lat);\n    console.log(\"l2\", ll.lat);\n    setCordinates(ll);\n  };\n  const [center, setCenter] = useState({\n    lat: 23.0166287,\n    lng: 72.5199797\n  });\n  console.log(\"ðŸš€ ~ file: Map.js:35 ~ Map ~ center\", center);\n  const refMap = useRef(null);\n  const handleBoundsChanged = () => {\n    const mapCenter = refMap.current.getCenter(); //get map center\n    console.log(\"lat\", mapCenter.lat(), \"lng\", mapCenter.lng());\n    setCenter(mapCenter);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GoogleMap, {\n      ref: refMap,\n      defaultZoom: 15,\n      defaultCenter: cordinates,\n      onBoundsChanged: handleBoundsChanged,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: center\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PlacesAutocomplete, {\n      value: address,\n      onChange: setAddress,\n      onSelect: handleSelect,\n      children: _ref => {\n        let {\n          getInputProps,\n          suggestions,\n          getSuggestionItemProps,\n          loading\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            ...getInputProps({\n              placeholder: \"Search Places ...\",\n              className: \"location-search-input\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"autocomplete-dropdown-container\",\n            children: [loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 26\n            }, this) : null, suggestions.map(suggestion => {\n              const style = {\n                backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                borderStyle: \"hidden\",\n                color: \"black\"\n              };\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"suggestionInput\",\n                  ...getSuggestionItemProps(suggestion, {\n                    style\n                  }),\n                  children: suggestion.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this);\n            })]\n          }, suggestions.description, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Map, \"cTN0CwyOAOKdbsnYGEE/ZmwNmmA=\");\n_c = Map;\nexport default _c3 = withScriptjs(_c2 = withGoogleMap(Map));\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Map\");\n$RefreshReg$(_c2, \"%default%$withScriptjs\");\n$RefreshReg$(_c3, \"%default%\");","map":{"version":3,"names":["React","useRef","useState","useCallback","useEffect","GoogleMap","withScriptjs","withGoogleMap","Marker","PlacesAutocomplete","geocodeByAddress","getLatLng","Map","cordinates","setCordinates","lat","lng","console","log","address","setAddress","handleSelect","value","result","ll","center","setCenter","refMap","handleBoundsChanged","mapCenter","current","getCenter","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","style","backgroundColor","active","borderStyle","color","description","index"],"sources":["C:/Users/keyur/Downloads/react-kyk7cr/src/Map.js"],"sourcesContent":["import React, { useRef, useState, useCallback } from 'react';\nimport { useEffect } from 'react';\nimport {\n  GoogleMap,\n  withScriptjs,\n  withGoogleMap,\n  Marker,\n} from 'react-google-maps';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from \"react-places-autocomplete\";\n\nfunction Map() {\n\n  \n  const [cordinates, setCordinates] = useState({\n    lat: 23.0166287,\n    lng: 72.5199797,\n  });\n    console.log(\"ðŸš€ ~ file: Map.js:20 ~ Map ~ cordinates\", cordinates)\n    const [address, setAddress] = useState(\"\");\n    const handleSelect = async (value) => {\n      console.log(\"ðŸš€ ~ file: Map.js:24 ~ handleChange ~ value\", value);\n      const result = await geocodeByAddress(value);\n      const ll = await getLatLng(result[0]);\n      setAddress(value);\n     \n      // console.log(\"ðŸš€ ~ file: index.js:22 ~ handleSelect ~ ll\", ll);\n      console.log(\"c1\", cordinates);\n      console.log(\"l1\", ll);\n      console.log(\"c2\", cordinates.lat);\n      console.log(\"l2\", ll.lat);\n\n      setCordinates(ll);\n    };\n\n  const [center, setCenter] = useState({\n    lat: 23.0166287,\n    lng: 72.5199797,\n  });\n  console.log(\"ðŸš€ ~ file: Map.js:35 ~ Map ~ center\", center)\n  const refMap = useRef(null);\n\n\n  const handleBoundsChanged = () => {\n    const mapCenter = refMap.current.getCenter(); //get map center\n    console.log(\"lat\", mapCenter.lat(), \"lng\", mapCenter.lng() );\n    setCenter(mapCenter)\n  };\n  return (\n    <>\n      <GoogleMap\n        ref={refMap}\n        defaultZoom={15}\n        defaultCenter={cordinates}\n        onBoundsChanged={handleBoundsChanged}\n      >\n        <Marker position={center} />\n      </GoogleMap>\n      <PlacesAutocomplete\n        value={address}\n        onChange={setAddress}\n        onSelect={handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div>\n            <input\n              {...getInputProps({\n                placeholder: \"Search Places ...\",\n                className: \"location-search-input\",\n              })}\n            />\n            <div\n              className=\"autocomplete-dropdown-container\"\n              key={suggestions.description}\n            >\n              {loading ? <div>Loading...</div> : null}\n              {suggestions.map((suggestion) => {\n                const style = {\n                  backgroundColor: suggestion.active ? \"#41b6e6\" : \"#fff\",\n                  borderStyle: \"hidden\",\n                  color: \"black\",\n                };\n                return (\n                  <div key={index}>\n                    <div\n                      className=\"suggestionInput\"\n                      {...getSuggestionItemProps(suggestion, {\n                        style,\n                      })}\n                    >\n                      {suggestion.description}\n                    </div>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    </>\n  );\n\n}\n\nexport default withScriptjs(withGoogleMap(Map));\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}